package com.shpr.tools;

import com.aliyuncs.DefaultAcsClient;
import com.aliyuncs.IAcsClient;
import com.aliyuncs.dysmsapi.model.v20170525.QuerySendDetailsRequest;
import com.aliyuncs.dysmsapi.model.v20170525.QuerySendDetailsResponse;
import com.aliyuncs.dysmsapi.model.v20170525.SendSmsRequest;
import com.aliyuncs.dysmsapi.model.v20170525.SendSmsResponse;
import com.aliyuncs.exceptions.ClientException;
import com.aliyuncs.profile.DefaultProfile;
import com.aliyuncs.profile.IClientProfile;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Random;

/**
 * @time  2019/8/22
 * @author yandongfa
 * @category 阿里国际短信验证码服务接口
 *
 */
public class AliyunCodeUtils {
   //产品名称:云通信短信API产品,开发者无需替换
   static final String product = "Dysmsapi";
   //产品域名,开发者无需替换
   static final String domain = "dysmsapi.aliyuncs.com";

   //必填：此处需要替换成开发者自己的AK(在阿里云访问控制台寻找)
   static final String accessKeyId = "LTAIgUMi1Ol3AyZa";
   static final String accessKeySecret = "rid0eNqbyFXMKSj2Ul23RkJGfnnCH9";
   //必填：短信签名,替换成开发者自己申请的短信签名
   static final String signName = "在线智能推荐组队平台";
   //必填：短信模板，替换成开发者自己申请的模版CODE
   static final String identityTemplateCode = "SMS_172881963";

   // 随机生成验证码(六位数)
   static int identifyingCode;
   
   //随机函数调用（每次随机生成六位数）
   public static int getIdentifyingCode(){
      return identifyingCode = new Random().nextInt(900000)+100000;  
   }

   //发送验证码
   public static SendSmsResponse sendSms(String phoneNumber, String templateCode, String templateParam) throws ClientException {

       //可自助调整超时时间
       System.setProperty("sun.net.client.defaultConnectTimeout", "10000");
       System.setProperty("sun.net.client.defaultReadTimeout", "10000");

       //初始化acsClient,暂不支持region化
       IClientProfile profile = DefaultProfile.getProfile("cn-hangzhou", accessKeyId, accessKeySecret);
       DefaultProfile.addEndpoint("cn-hangzhou", "cn-hangzhou", product, domain);
       IAcsClient acsClient = new DefaultAcsClient(profile);

       //组装请求对象-具体描述见控制台-文档部分内容
       SendSmsRequest request = new SendSmsRequest();
       
       //必填:待发送手机号
       //request.setPhoneNumbers("17785947474");
       
       request.setPhoneNumbers(phoneNumber);
       
       //必填:短信签名-可在短信控制台中找到
       //request.setSignName("考研通系统");
       
       request.setSignName(signName);
       
       //必填:短信模板-可在短信控制台中找到
       // request.setTemplateCode("SMS_172738244");
       
       request.setTemplateCode(templateCode);
       
       //可选:模板中的变量替换JSON串,如模板内容为"亲爱的${name},您的验证码为${code}"时,此处的值为
       //request.setTemplateParam("{\"name\":\"Tom\", \"code\":\"123\"}");
       request.setTemplateParam(templateParam);
       
       //选填-上行短信扩展码(无特殊需求用户请忽略此字段)
       //request.setSmsUpExtendCode("90997");

       //可选:outId为提供给业务方扩展字段,最终在短信回执消息中将此值带回给调用者
       request.setOutId("yourOutId");

       //hint 此处可能会抛出异常，注意catch
       SendSmsResponse sendSmsResponse = acsClient.getAcsResponse(request);

       return sendSmsResponse;
   }

   
   public static QuerySendDetailsResponse querySendDetails(String bizId,String phoneNumber) throws ClientException {

       //可自助调整超时时间
       System.setProperty("sun.net.client.defaultConnectTimeout", "10000");
       System.setProperty("sun.net.client.defaultReadTimeout", "10000");

       //初始化acsClient,暂不支持region化
       IClientProfile profile = DefaultProfile.getProfile("cn-hangzhou", accessKeyId, accessKeySecret);
       DefaultProfile.addEndpoint("cn-hangzhou", "cn-hangzhou", product, domain);
       IAcsClient acsClient = new DefaultAcsClient(profile);

       //组装请求对象
       QuerySendDetailsRequest request = new QuerySendDetailsRequest();
       //必填-号码
       request.setPhoneNumber(phoneNumber);
       //可选-流水号
       request.setBizId(bizId);
       //必填-发送日期 支持30天内记录查询，格式yyyyMMdd
       SimpleDateFormat ft = new SimpleDateFormat("yyyyMMdd");
       request.setSendDate(ft.format(new Date()));
       //必填-页大小
       request.setPageSize(10L);
       //必填-当前页码从1开始计数
       request.setCurrentPage(1L);

       //hint 此处可能会抛出异常，注意catch
       QuerySendDetailsResponse querySendDetailsResponse = acsClient.getAcsResponse(request);

       return querySendDetailsResponse;
   }
   

   /**
    * 发送验证码短信（templateParam 根据模板需要传入的参数进行json格式拼接）
    * @param phoneNumber
    * @throws ClientException
    * @throws InterruptedException
    */
   public static SendSmsResponse sendIdentifyingCode(String phoneNumber,int identifyingCode) throws ClientException {
       String templateParam = "{\"code\":\"" + identifyingCode + "\"}";
       return sendSms(phoneNumber,identityTemplateCode,templateParam);
   }
   

   public static void main(String[] args) throws ClientException, InterruptedException {
        
       //发短信
       SendSmsResponse response = sendSms(args[0],identityTemplateCode,"{\"code\":\"" + getIdentifyingCode() + "\"}");
       System.out.println("短信接口返回的数据----------------");
       System.out.println("Code=" + response.getCode());
       System.out.println("Message=" + response.getMessage());
       System.out.println("RequestId=" + response.getRequestId());
       System.out.println("BizId=" + response.getBizId());
       Thread.sleep(3000L);

       //查明细
       if(response.getCode() != null && response.getCode().equals("OK")) {
           QuerySendDetailsResponse querySendDetailsResponse = querySendDetails(response.getBizId(),"***");
           System.out.println("短信明细查询接口返回数据----------------");
           System.out.println("Code=" + querySendDetailsResponse.getCode());
           System.out.println("Message=" + querySendDetailsResponse.getMessage());
           int i = 0;
           for(QuerySendDetailsResponse.SmsSendDetailDTO smsSendDetailDTO : querySendDetailsResponse.getSmsSendDetailDTOs())
           {
               System.out.println("SmsSendDetailDTO["+i+"]:");
               System.out.println("Content=" + smsSendDetailDTO.getContent());
               System.out.println("ErrCode=" + smsSendDetailDTO.getErrCode());
               System.out.println("OutId=" + smsSendDetailDTO.getOutId());
               System.out.println("PhoneNum=" + smsSendDetailDTO.getPhoneNum());
               System.out.println("ReceiveDate=" + smsSendDetailDTO.getReceiveDate());
               System.out.println("SendDate=" + smsSendDetailDTO.getSendDate());
               System.out.println("SendStatus=" + smsSendDetailDTO.getSendStatus());
               System.out.println("Template=" + smsSendDetailDTO.getTemplateCode());
           }
           System.out.println("TotalCount=" + querySendDetailsResponse.getTotalCount());
           System.out.println("RequestId=" + querySendDetailsResponse.getRequestId());
       }

   }
   

}
